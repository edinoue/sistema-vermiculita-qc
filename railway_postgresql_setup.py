#!/usr/bin/env python
"""
Guia completo para configurar PostgreSQL no Railway
"""

def railway_postgresql_setup():
    """Guia completo para configurar PostgreSQL no Railway"""
    
    print("üöÄ CONFIGURA√á√ÉO COMPLETA DO POSTGRESQL NO RAILWAY")
    print("=" * 70)
    
    print("""
üìã PASSO A PASSO DETALHADO:

1. ACESSAR RAILWAY DASHBOARD:
   - Acesse: https://railway.app/dashboard
   - Fa√ßa login com sua conta
   - Selecione seu projeto

2. ADICIONAR BANCO POSTGRESQL:
   - Clique em "New" (bot√£o azul)
   - Selecione "Database"
   - Escolha "PostgreSQL"
   - Aguarde a cria√ß√£o (2-3 minutos)

3. COPIAR DATABASE_URL:
   - Ap√≥s cria√ß√£o, clique no banco PostgreSQL
   - V√° na aba "Connect"
   - Copie a "DATABASE_URL" completa
   - Exemplo: postgresql://user:pass@host:port/dbname

4. CONFIGURAR VARI√ÅVEL DE AMBIENTE:
   - No Railway, v√° em "Variables"
   - Clique em "New Variable"
   - Nome: DATABASE_URL
   - Valor: Cole a URL copiada
   - Clique em "Add"

5. VERIFICAR CONFIGURA√á√ÉO:
   - Execute: python check_database_config.py
   - Deve mostrar "PostgreSQL detectado"

6. APLICAR MIGRA√á√ïES:
   - Execute: python manage.py migrate
   - Ou aguarde deploy autom√°tico

7. CRIAR SUPERUSU√ÅRIO:
   - Execute: python manage.py createsuperuser
   - Ou use o console do Railway

‚úÖ RESULTADO ESPERADO:
   - Dados persistentes entre deploys
   - Backup autom√°tico no Railway
   - Sistema escal√°vel para produ√ß√£o
""")
    
    print("\nüîß SCRIPTS DE APOIO:")
    print("   - check_database_config.py: Verificar configura√ß√£o")
    print("   - setup_railway_database.py: Configura√ß√£o autom√°tica")
    print("   - backup_system.py: Backup de dados")
    print("   - deploy_safe_with_persistence.py: Deploy seguro")
    
    print("\n‚ö†Ô∏è  IMPORTANTE:")
    print("   - Fa√ßa backup dos dados atuais antes de mudar")
    print("   - Teste a configura√ß√£o antes de usar em produ√ß√£o")
    print("   - Mantenha a DATABASE_URL segura")

if __name__ == '__main__':
    railway_postgresql_setup()




