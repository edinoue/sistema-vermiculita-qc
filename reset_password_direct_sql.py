#!/usr/bin/env python
"""
Script para redefinir senha usando SQL direto no PostgreSQL
"""

import os
import sys

print("üöÄ Sistema de Controle de Qualidade - Vermiculita")
print("üîß Redefinindo Senha do Usu√°rio Admin (SQL Direto)")
print("=" * 50)

try:
    # Tentar instalar psycopg2 se n√£o estiver dispon√≠vel
    try:
        import psycopg2
        print("‚úÖ psycopg2 dispon√≠vel")
    except ImportError:
        print("‚ö†Ô∏è  psycopg2 n√£o encontrado, tentando instalar...")
        import subprocess
        subprocess.check_call([sys.executable, "-m", "pip", "install", "psycopg2-binary"])
        import psycopg2
        print("‚úÖ psycopg2 instalado com sucesso")
    
    # Conectar ao PostgreSQL
    conn = psycopg2.connect(
        host="maglev.proxy.rlwy.net",
        port="40681",
        database="railway",
        user="postgres",
        password="XcocfFRbysyHFNYBqMiqlxbITpGYIagl"
    )
    
    print("‚úÖ Conectado ao PostgreSQL do Railway")
    
    cursor = conn.cursor()
    
    # Verificar se a tabela auth_user existe
    cursor.execute("""
        SELECT table_name 
        FROM information_schema.tables 
        WHERE table_schema = 'public' AND table_name = 'auth_user'
    """)
    
    if not cursor.fetchone():
        print("‚ùå Tabela auth_user n√£o encontrada!")
        print("Executando migra√ß√µes...")
        
        # Executar migra√ß√µes b√°sicas
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'vermiculita_system.settings')
        os.environ['DATABASE_URL'] = 'postgresql://postgres:XcocfFRbysyHFNYBqMiqlxbITpGYIagl@maglev.proxy.rlwy.net:40681/railway'
        
        import django
        django.setup()
        
        from django.core.management import execute_from_command_line
        execute_from_command_line(['manage.py', 'migrate', '--run-syncdb'])
        
        print("‚úÖ Migra√ß√µes executadas")
    
    # Verificar usu√°rios existentes
    cursor.execute("SELECT id, username, email, is_superuser, is_staff FROM auth_user")
    users = cursor.fetchall()
    
    print(f"üìä Total de usu√°rios: {len(users)}")
    for user in users:
        print(f"  - ID: {user[0]}, Usu√°rio: {user[1]}, Email: {user[2]}, Super: {user[3]}, Staff: {user[4]}")
    
    # Buscar o usu√°rio admin
    cursor.execute("SELECT id, username, email FROM auth_user WHERE username = 'admin'")
    admin_user = cursor.fetchone()
    
    if not admin_user:
        print("‚ùå Usu√°rio 'admin' n√£o encontrado!")
        print("Criando novo usu√°rio admin...")
        
        # Importar Django para usar o sistema de hash de senha
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'vermiculita_system.settings')
        os.environ['DATABASE_URL'] = 'postgresql://postgres:XcocfFRbysyHFNYBqMiqlxbITpGYIagl@maglev.proxy.rlwy.net:40681/railway'
        
        import django
        django.setup()
        
        from django.contrib.auth.hashers import make_password
        from django.contrib.auth import get_user_model
        
        User = get_user_model()
        
        # Criar novo usu√°rio admin
        admin_user = User.objects.create_superuser(
            username='admin',
            email='admin@vermiculita.com',
            password='admin123'
        )
        
        print(f"‚úÖ Novo usu√°rio admin criado (ID: {admin_user.id})")
    else:
        print(f"‚úÖ Usu√°rio admin encontrado (ID: {admin_user[0]})")
        
        # Importar Django para usar o sistema de hash de senha
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'vermiculita_system.settings')
        os.environ['DATABASE_URL'] = 'postgresql://postgres:XcocfFRbysyHFNYBqMiqlxbITpGYIagl@maglev.proxy.rlwy.net:40681/railway'
        
        import django
        django.setup()
        
        from django.contrib.auth.hashers import make_password
        
        # Gerar hash da nova senha
        new_password_hash = make_password('admin123')
        print(f"üîë Hash da nova senha gerado")
        
        # Atualizar a senha no banco
        cursor.execute(
            "UPDATE auth_user SET password = %s WHERE username = 'admin'",
            (new_password_hash,)
        )
        
        # Confirmar a altera√ß√£o
        conn.commit()
        
        print("\n" + "="*50)
        print("‚úÖ SENHA REDEFINIDA COM SUCESSO!")
        print("="*50)
        print(f"üë§ Usu√°rio: {admin_user[1]}")
        print(f"üìß Email: {admin_user[2]}")
        print(f"üîë Nova senha: admin123")
        print("="*50)
        print("üéâ Agora voc√™ pode fazer login com:")
        print("   Usu√°rio: admin")
        print("   Senha: admin123")
    
    conn.close()
    
except Exception as e:
    print(f"‚ùå Erro: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)
